set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)
Plugin 'Valloric/YouCompleteMe'

" pep8
Plugin 'nvie/vim-flake8'

" Colorschemes
" Plugin 'altercation/vim-colors-solarized'
Plugin 'jnurmine/Zenburn'

" Syntax checking
Plugin 'vim-syntastic/syntastic'

" File browsing
Plugin 'scrooloose/nerdtree'

" Plugin powerline
"Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" Plugin vim-ariline
Plugin 'vim-airline/vim-airline'

" FZF
Plugin 'junegunn/fzf.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


" Other settings

" for python plugins
let python_highlight_all=1
syntax on

" color
" set background=light
colorscheme zenburn

:set mouse-=a

au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ | set softtabstop=4
    \ | set shiftwidth=4
    \ | set textwidth=79
    \ | set expandtab
    \ | set autoindent
    \ | set fileformat=unix

" Cut whitespaces at the end of lines
" "Flagging Unnecessary Whitespace
highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
map <C-n> :NERDTreeToggle<CR>


" airline
let g:airline#extensions#tabline#enabled = 1
